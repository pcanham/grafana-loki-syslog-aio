block parser netapp_ontap-parser() {    
    channel {
        filter { 
            message('^[a-z0-9-]+: [0-9]+\.[0-9a-f]+ [0-9a-f]+ [A-Z][a-z][a-z] ([A-Z][a-z][a-z] \d\d \d\d\d\d \d\d:\d\d:\d\d [+-]?\d{1,2}:\d\d)' flags(store-matches));
        };	
        rewrite {
            set('$PROGRAM: $MESSAGE', value(MESSAGE));
            set('$PROGRAM', value(HOST));
            unset(value(PROGRAM));
        };
        parser {
            date-parser-nofilter(
                format(
                    '%a %d %Y %H:%M:%S %z',
                )
                template("$1")
            );
        };

        rewrite {
            r_set_splunk_dest_default(
                index("infraops")
                sourcetype('ontap:ems')
                vendor_product("netapp_ontap")
            );                         
        };          

        rewrite {
                r_set_splunk_dest_update(
                    meta_key('netapp_ontap_ems')
                );
        };  
        
    };
};
application netapp_ontap[sc4s-syslog] {
	filter { 
        program('^[a-z0-9-]+$');
    };	
    parser { netapp_ontap-parser(); };   
};
